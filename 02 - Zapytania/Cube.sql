--cube
SELECT
    NVL(TO_CHAR(BIS.NAME), 'FOR ALL') "BISTRO",
    NVL(TO_CHAR(PROD.NAME), 'FOR ALL') "PRODUCT",
    "SALES COUNT",
    TAKINGS
FROM
    (
        SELECT
            BISTRO_ID,
            PRODUCT_ID,
            count(*) AS "SALES COUNT",
            sum(PRICE_VALUE) AS TAKINGS
        FROM
            INVOICE INV
        GROUP BY
            cube (INV.BISTRO_ID, INV.PRODUCT_ID)
        order by
            INV.BISTRO_ID,
            INV.PRODUCT_ID
    ) MAIN 
	JOIN BISTRO BIS ON MAIN.BISTRO_ID = BIS.ID
    LEFT OUTER JOIN PRODUCT PROD ON MAIN.PRODUCT_ID = PROD.ID;

SELECT
    NVL(TO_CHAR(BON.NAME), 'ALL') AS BONUS,
    NVL(TO_CHAR(BIS.NAME), 'ALL') AS BISTRO,
    "SALES COUNT"
FROM
    (
        SELECT
            BONUS_ID,
            BISTRO_ID,
            COUNT(*) AS "SALES COUNT"
        FROM
            INVOICE INV
        GROUP BY
            CUBE (INV.BONUS_ID, INV.BISTRO_ID)
        ORDER BY
            INV.BONUS_ID ASC,
            INV.BISTRO_ID ASC
    ) MAIN 
	JOIN BONUS BON ON BON.ID = MAIN.BONUS_ID
    LEFT OUTER JOIN BISTRO BIS ON MAIN.BISTRO_ID = BIS.ID;

SELECT
    NVL(TO_CHAR(MEN.NAME), 'ALL') AS MENU,
    NVL(TO_CHAR(BIS.NAME), 'ALL') AS BISTRO,
    NVL(TO_CHAR(MAIN.CLIENT_RATING), 'ALL') as RATING,
    SALES_COUNT AS "SALES COUNT"
FROM
    (
        SELECT
            CLIENT_RATING,
            MENU_ID,
            BISTRO_ID,
            COUNT (*) SALES_COUNT
        FROM
            INVOICE INV
        GROUP BY
            cube (INV.MENU_ID, INV.CLIENT_RATING, INV.BISTRO_ID)
        ORDER BY
            INV.CLIENT_RATING ASC,
            INV.CLIENT_RATING ASC,
            INV.BISTRO_ID ASC
    ) MAIN 
	JOIN BIS ON MAIN.MENU_ID = MEN.ID
    LEFT OUTER JOIN BISTRO BI ON MEN.BISTRO_ID = BIS.ID;